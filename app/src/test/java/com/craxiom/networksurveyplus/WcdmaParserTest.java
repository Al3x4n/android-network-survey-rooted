package com.craxiom.networksurveyplus;

import android.location.Location;

import com.craxiom.networksurveyplus.messages.PcapMessage;
import com.craxiom.networksurveyplus.messages.QcdmConstants;
import com.craxiom.networksurveyplus.messages.QcdmMessage;
import com.craxiom.networksurveyplus.parser.QcdmWcdmaParser;

import org.junit.Test;

import java.util.Arrays;

import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

public class WcdmaParserTest
{
    @Test
    public void testWcdmaQcdmMessage_searchCellReselectionRank()
    {
        final byte[] qcdmMessageBytes = {(byte) 0x10, (byte) 0x00, (byte) 0x33, (byte) 0x00, (byte) 0x33, (byte) 0x00, (byte) 0x05, (byte) 0x40, (byte) 0xb7, (byte) 0x4d, (byte) 0x60, (byte) 0xad, (byte) 0x2a, (byte) 0x5f, (byte) 0xf3, (byte) 0x00, (byte) 0x82, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x64, (byte) 0x02, (byte) 0x61, (byte) 0x01, (byte) 0xc7, (byte) 0xb4, (byte) 0xff, (byte) 0xfb, (byte) 0x03, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x64, (byte) 0x02, (byte) 0x64, (byte) 0x00, (byte) 0xb6, (byte) 0xa1, (byte) 0xff, (byte) 0xe7, (byte) 0xe7, (byte) 0xff, (byte) 0x04, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x80, (byte) 0x00};
    }

    @Test
    public void testWcdmaQcdmMessage_rrcStates()
    {
        final byte[] qcdmMessageBytes = {(byte) 0x10, (byte) 0x00, (byte) 0x0d, (byte) 0x00, (byte) 0x0d, (byte) 0x00, (byte) 0x25, (byte) 0x41, (byte) 0x02, (byte) 0x38, (byte) 0x87, (byte) 0xad, (byte) 0x2a, (byte) 0x5f, (byte) 0xf3, (byte) 0x00, (byte) 0x00};
    }

    @Test
    public void testWcdmaQcdmMessage_cellId()
    {
        final byte[] qcdmMessageBytes = {(byte) 0x10, (byte) 0x00, (byte) 0x2c, (byte) 0x00, (byte) 0x2c, (byte) 0x00, (byte) 0x27, (byte) 0x41, (byte) 0xcc, (byte) 0x95, (byte) 0x09, (byte) 0xae, (byte) 0x2a, (byte) 0x5f, (byte) 0xf3, (byte) 0x00, (byte) 0xd4, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x64, (byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0xcd, (byte) 0x20, (byte) 0xf7, (byte) 0x0c, (byte) 0x00, (byte) 0x00, (byte) 0x07, (byte) 0x00, (byte) 0x10, (byte) 0x16, (byte) 0x03, (byte) 0x01, (byte) 0x00, (byte) 0x04, (byte) 0x01, (byte) 0x00, (byte) 0xae, (byte) 0x32, (byte) 0x00, (byte) 0x00, (byte) 0xef, (byte) 0x00, (byte) 0x00, (byte) 0x00};
    }

    @Test
    public void testWcdmaQcdmMessage_signalingMessage()
    {
        final byte[] qcdmMessageBytes = {(byte) 0x10, (byte) 0x00, (byte) 0x2d, (byte) 0x00, (byte) 0x2d, (byte) 0x00, (byte) 0x2f, (byte) 0x41, (byte) 0x65, (byte) 0x54, (byte) 0x02, (byte) 0x83, (byte) 0x24, (byte) 0x5f, (byte) 0xf3, (byte) 0x00, (byte) 0x81, (byte) 0x03, (byte) 0x19, (byte) 0x00, (byte) 0x64, (byte) 0x02, (byte) 0x61, (byte) 0x01, (byte) 0xde, (byte) 0x52, (byte) 0x55, (byte) 0x24, (byte) 0x0e, (byte) 0xc8, (byte) 0x08, (byte) 0x04, (byte) 0x06, (byte) 0x0a, (byte) 0x02, (byte) 0xfa, (byte) 0x76, (byte) 0x60, (byte) 0x62, (byte) 0x87, (byte) 0x99, (byte) 0x01, (byte) 0x30, (byte) 0x00, (byte) 0x1b, (byte) 0x01, (byte) 0x10, (byte) 0x00, (byte) 0x00};
        final byte[] expectedQcdmMessagePayloadBytes = {(byte) 0x81, (byte) 0x03, (byte) 0x19, (byte) 0x00, (byte) 0x64, (byte) 0x02, (byte) 0x61, (byte) 0x01, (byte) 0xde, (byte) 0x52, (byte) 0x55, (byte) 0x24, (byte) 0x0e, (byte) 0xc8, (byte) 0x08, (byte) 0x04, (byte) 0x06, (byte) 0x0a, (byte) 0x02, (byte) 0xfa, (byte) 0x76, (byte) 0x60, (byte) 0x62, (byte) 0x87, (byte) 0x99, (byte) 0x01, (byte) 0x30, (byte) 0x00, (byte) 0x1b, (byte) 0x01, (byte) 0x10, (byte) 0x00, (byte) 0x00};
        final byte[] expectedPcapRecordBytes = {(byte) 0x65, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x65, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x20, (byte) 0x00, (byte) 0xe4, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x32, (byte) 0x75, (byte) 0x14, (byte) 0x00, (byte) 0x02, (byte) 0xcf, (byte) 0x14, (byte) 0x00, (byte) 0x0e, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x05, (byte) 0x21, (byte) 0x05, (byte) 0x84, (byte) 0x01, (byte) 0x8f, (byte) 0x90, (byte) 0x35, (byte) 0x3f, (byte) 0x1d, (byte) 0x61, (byte) 0x6b, (byte) 0x45, (byte) 0x00, (byte) 0x00, (byte) 0x45, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x40, (byte) 0x11, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x12, (byte) 0x79, (byte) 0x12, (byte) 0x79, (byte) 0x00, (byte) 0x31, (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x04, (byte) 0x0c, (byte) 0x00, (byte) 0x42, (byte) 0x64, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xde, (byte) 0x52, (byte) 0x55, (byte) 0x24, (byte) 0x0e, (byte) 0xc8, (byte) 0x08, (byte) 0x04, (byte) 0x06, (byte) 0x0a, (byte) 0x02, (byte) 0xfa, (byte) 0x76, (byte) 0x60, (byte) 0x62, (byte) 0x87, (byte) 0x99, (byte) 0x01, (byte) 0x30, (byte) 0x00, (byte) 0x1b, (byte) 0x01, (byte) 0x10, (byte) 0x00, (byte) 0x00};

        final QcdmMessage qcdmMessage = new QcdmMessage(qcdmMessageBytes, 0);
        assertEquals(16, qcdmMessage.getOpCode());
        assertEquals(QcdmConstants.WCDMA_SIGNALING_MESSAGES, qcdmMessage.getLogType());
        assertArrayEquals("The qcdm message bytes did not match what was expected", expectedQcdmMessagePayloadBytes, qcdmMessage.getLogPayload());

        final Location location = new FakeLocation();
        location.setLatitude(41.4928645);
        location.setLongitude(-90.1333759);
        location.setAltitude(152.6591);

        final PcapMessage pcapMessage = QcdmWcdmaParser.convertWcdmaSignalingMessage(qcdmMessage, location);

        assertNotNull(pcapMessage);

        final byte[] pcapRecordBytes = pcapMessage.getPcapRecord();

        // Ignore the first 8 bytes since it contains the record timestamp.
        assertArrayEquals(expectedPcapRecordBytes, Arrays.copyOfRange(pcapRecordBytes, 8, pcapRecordBytes.length));
    }
}
